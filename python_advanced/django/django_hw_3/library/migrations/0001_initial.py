# Generated by Django 5.2.1 on 2025-06-05 08:26

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('profile', models.URLField(blank=True, null=True, verbose_name="link to the author's website")),
                ('is_removed', models.BooleanField(default=False, help_text='Was the author removed from database')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Category Title')),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Library Ttile')),
                ('location', models.CharField(max_length=100, null=True, verbose_name='Location')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
            ],
            options={
                'verbose_name_plural': 'Libraries',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='First_name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last_name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('age', models.PositiveIntegerField(verbose_name='Age')),
                ('role', models.CharField(choices=[('A', 'Administrator'), ('R', 'Reader'), ('E', 'Employee')], max_length=1, verbose_name='Role')),
                ('active', models.BooleanField(default=True, verbose_name='Is active')),
                ('libraries', models.ManyToManyField(related_name='members', to='library.library')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('publication_date', models.DateField()),
                ('description', models.TextField(blank=True, null=True)),
                ('genre', models.CharField(choices=[('Fiction', 'Fiction'), ('Fantasy', 'Fantasy'), ('Mystery', 'Mystery'), ('Default', 'not-set')], default='not-set')),
                ('pages_ammount', models.PositiveIntegerField(default=100, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='library.author')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='library.category', verbose_name='Category')),
                ('libraries', models.ManyToManyField(related_name='books', to='library.library', verbose_name='Library')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='library.member', verbose_name='Publisher')),
            ],
        ),
    ]
